/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AdminRouteRouteImport } from './routes/admin/route'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AdminTurmasRouteImport } from './routes/admin/turmas'
import { Route as AdminTreinamentosRouteImport } from './routes/admin/treinamentos'
import { Route as AdminRecursosRouteImport } from './routes/admin/recursos'
import { Route as AdminMatriculasRouteImport } from './routes/admin/matriculas'
import { Route as AdminAlunosRouteImport } from './routes/admin/alunos'
import { Route as StudentDashboardIndexRouteImport } from './routes/student/dashboard/index'
import { Route as StudentTurmaIdRouteImport } from './routes/student/turma/$id'

const AdminRouteRoute = AdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminTurmasRoute = AdminTurmasRouteImport.update({
  id: '/turmas',
  path: '/turmas',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminTreinamentosRoute = AdminTreinamentosRouteImport.update({
  id: '/treinamentos',
  path: '/treinamentos',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminRecursosRoute = AdminRecursosRouteImport.update({
  id: '/recursos',
  path: '/recursos',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminMatriculasRoute = AdminMatriculasRouteImport.update({
  id: '/matriculas',
  path: '/matriculas',
  getParentRoute: () => AdminRouteRoute,
} as any)
const AdminAlunosRoute = AdminAlunosRouteImport.update({
  id: '/alunos',
  path: '/alunos',
  getParentRoute: () => AdminRouteRoute,
} as any)
const StudentDashboardIndexRoute = StudentDashboardIndexRouteImport.update({
  id: '/student/dashboard/',
  path: '/student/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentTurmaIdRoute = StudentTurmaIdRouteImport.update({
  id: '/student/turma/$id',
  path: '/student/turma/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/alunos': typeof AdminAlunosRoute
  '/admin/matriculas': typeof AdminMatriculasRoute
  '/admin/recursos': typeof AdminRecursosRoute
  '/admin/treinamentos': typeof AdminTreinamentosRoute
  '/admin/turmas': typeof AdminTurmasRoute
  '/auth/login': typeof AuthLoginRoute
  '/student/turma/$id': typeof StudentTurmaIdRoute
  '/student/dashboard': typeof StudentDashboardIndexRoute
}
export interface FileRoutesByTo {
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/alunos': typeof AdminAlunosRoute
  '/admin/matriculas': typeof AdminMatriculasRoute
  '/admin/recursos': typeof AdminRecursosRoute
  '/admin/treinamentos': typeof AdminTreinamentosRoute
  '/admin/turmas': typeof AdminTurmasRoute
  '/auth/login': typeof AuthLoginRoute
  '/student/turma/$id': typeof StudentTurmaIdRoute
  '/student/dashboard': typeof StudentDashboardIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/admin': typeof AdminRouteRouteWithChildren
  '/admin/alunos': typeof AdminAlunosRoute
  '/admin/matriculas': typeof AdminMatriculasRoute
  '/admin/recursos': typeof AdminRecursosRoute
  '/admin/treinamentos': typeof AdminTreinamentosRoute
  '/admin/turmas': typeof AdminTurmasRoute
  '/auth/login': typeof AuthLoginRoute
  '/student/turma/$id': typeof StudentTurmaIdRoute
  '/student/dashboard/': typeof StudentDashboardIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/admin'
    | '/admin/alunos'
    | '/admin/matriculas'
    | '/admin/recursos'
    | '/admin/treinamentos'
    | '/admin/turmas'
    | '/auth/login'
    | '/student/turma/$id'
    | '/student/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/admin'
    | '/admin/alunos'
    | '/admin/matriculas'
    | '/admin/recursos'
    | '/admin/treinamentos'
    | '/admin/turmas'
    | '/auth/login'
    | '/student/turma/$id'
    | '/student/dashboard'
  id:
    | '__root__'
    | '/admin'
    | '/admin/alunos'
    | '/admin/matriculas'
    | '/admin/recursos'
    | '/admin/treinamentos'
    | '/admin/turmas'
    | '/auth/login'
    | '/student/turma/$id'
    | '/student/dashboard/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  StudentTurmaIdRoute: typeof StudentTurmaIdRoute
  StudentDashboardIndexRoute: typeof StudentDashboardIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/turmas': {
      id: '/admin/turmas'
      path: '/turmas'
      fullPath: '/admin/turmas'
      preLoaderRoute: typeof AdminTurmasRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/treinamentos': {
      id: '/admin/treinamentos'
      path: '/treinamentos'
      fullPath: '/admin/treinamentos'
      preLoaderRoute: typeof AdminTreinamentosRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/recursos': {
      id: '/admin/recursos'
      path: '/recursos'
      fullPath: '/admin/recursos'
      preLoaderRoute: typeof AdminRecursosRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/matriculas': {
      id: '/admin/matriculas'
      path: '/matriculas'
      fullPath: '/admin/matriculas'
      preLoaderRoute: typeof AdminMatriculasRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/admin/alunos': {
      id: '/admin/alunos'
      path: '/alunos'
      fullPath: '/admin/alunos'
      preLoaderRoute: typeof AdminAlunosRouteImport
      parentRoute: typeof AdminRouteRoute
    }
    '/student/dashboard/': {
      id: '/student/dashboard/'
      path: '/student/dashboard'
      fullPath: '/student/dashboard'
      preLoaderRoute: typeof StudentDashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student/turma/$id': {
      id: '/student/turma/$id'
      path: '/student/turma/$id'
      fullPath: '/student/turma/$id'
      preLoaderRoute: typeof StudentTurmaIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AdminRouteRouteChildren {
  AdminAlunosRoute: typeof AdminAlunosRoute
  AdminMatriculasRoute: typeof AdminMatriculasRoute
  AdminRecursosRoute: typeof AdminRecursosRoute
  AdminTreinamentosRoute: typeof AdminTreinamentosRoute
  AdminTurmasRoute: typeof AdminTurmasRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminAlunosRoute: AdminAlunosRoute,
  AdminMatriculasRoute: AdminMatriculasRoute,
  AdminRecursosRoute: AdminRecursosRoute,
  AdminTreinamentosRoute: AdminTreinamentosRoute,
  AdminTurmasRoute: AdminTurmasRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  StudentTurmaIdRoute: StudentTurmaIdRoute,
  StudentDashboardIndexRoute: StudentDashboardIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
